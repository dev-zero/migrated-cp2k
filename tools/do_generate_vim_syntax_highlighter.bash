#!/bin/bash

#
#
# generates an up-to-date file to have CP2K syntax highlighting in vim
#
# Based on the work by Alin M Elena available at https://gitorious.org/cp2k-vim
#
# Here are just simple instructions how to install
#
# 1) run CP2K with the --xml flag 
#
#  ../exe/Linux-x86-64-gfortran/cp2k.sdbg --xml
#
# 2) now, run this script
#
#  /bin/bash do_generate_vim_syntax_highlighter.bash
#
# 3) copy the generate cp2k.vim to ~/.vim/syntax/
#    you may need to create the ~/.vim folders and subfolders
#
# 4) tell vim to know about your files
#    in this file ~/.vim/filetype.vim add the following line (provided you use *.inp as input name)
#
#    au BufRead,BufNewFile *.inp setfiletype cp2k
#

if [ -f cp2k_input.xml ]; then

echo "found cp2k_input.xml generating cp2k.vim"

else

echo "could not find cp2k_input.xml ! "
echo "generate this file by running cp2k.sopt --xml "
exit 1

fi

(

cat << EOF
" Vim syntax file
" Language: cp2k input files
" Maintainer: based on work by Alin M Elena available at https://gitorious.org/cp2k-vim
" Latest Revision: 13th of September 2010

if exists("b:current_syntax")
  finish
endif

syn case ignore

"----------------------------------------------------------------/
"       cp2k predefined constants
"----------------------------------------------------------------/

" extracted from the file generated by cp2k.popt --xml using
" grep -A 1  "<ITEM>" cp2k_input.xml | grep NAME | sed 's;<NAME>;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kConstant &/'; echo
EOF

grep -A 1  "<ITEM>" cp2k_input.xml | grep NAME | sed 's;<NAME>;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kConstant &/'; echo

cat << EOF
"----------------------------------------------------------------/
"       cp2k sections
"----------------------------------------------------------------/
" grep -A1 -i "<Section" cp2k_input.xml | grep NAME | sed 's;<NAME>;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kSection &/'; echo
EOF

grep -A1 -i "<Section" cp2k_input.xml | grep NAME | sed 's;<NAME>;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kSection &/'; echo

cat << EOF
"----------------------------------------------------------------/
"       cp2k keywords
"----------------------------------------------------------------/
"grep -A1 -i "<Keyword" cp2k_input.xml | grep NAME | sed 's;<NAME\s*type="default">;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kKeyword &/'; echo
EOF

grep -A1 -i "<Keyword" cp2k_input.xml | grep NAME | sed 's;<NAME\s*type="default">;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kKeyword &/'; echo

cat << EOF
"----------------------------------------------------------------/
"       cp2k keywords alias
"----------------------------------------------------------------/
" grep -A2 -i "<Keyword" cp2k_input.xml | grep -i alias | sed 's;<NAME\s*type="alias">;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kKeywordAlias &/'; echo
EOF

grep -A2 -i "<Keyword" cp2k_input.xml | grep -i alias | sed 's;<NAME\s*type="alias">;;g' | sed 's;<\/NAME>;;g' | tr -d [:blank:] | tr '[:upper:]' '[:lower:]' | sort | uniq | xargs | fold -s -c -w 120 | sed -e 's/.*/syn keyword cp2kKeywordAlias &/'; echo

cat << EOF
"----------------------------------------------------------------------------/
" fun stuff folding
"----------------------------------------------------------------------------/
syn region cp2kFold start="^\s*&\z(\w*\)"  end="^\s*&End\s\+\z1\>"  contains=cp2kFold fold keepend


"----------------------------------------------------------------/
"       cp2k numbers used in blocks
"----------------------------------------------------------------/
"   Regular int like number with - + or nothing in front
"       e.g. 918, or -49

syn match cp2kNumber '\d\+'
syn match cp2kNumber '[-+]\d\+'

"   Floating point number with decimal no E or e (+,-)
"       e.g. 0.198781, or -3.141592

syn match cp2kNumber '\d\+\.\d*'
syn match cp2kNumber '[-+]\d\+\.\d*'

"   Floating point like number with E and no decimal point (+,-)
"       e.g.    3E+9, 3e+09, or -3e+02

syn match cp2kNumber '[-+]\=\d[[:digit:]]*[eE][\-+]\=\d\+'
syn match cp2kNumber '\d[[:digit:]]*[eE][\-+]\=\d\+'

"   Floating point like number with E and decimal point (+,-)
"       e.g.    -3.9188e+09, or 0.9188E-93

syn match cp2kNumber '[-+]\=\d[[:digit:]]*\.\d*[eE][\-+]\=\d\+'
syn match cp2kNumber '\d[[:digit:]]*\.\d*[eE][\-+]\=\d\+'

syn keyword cp2kBool true false T F yes no


"-----------------------------------------------------------------/
"   CP2K comments
"-----------------------------------------------------------------/
syn keyword cp2kTodo TODO FIXME NOTE REMARK
syn match cp2kComment "#.*$" contains=cp2kTodo
syn match cp2kComment "!.*$" contains=cp2kTodo


"-----------------------------------------------------------------/
"   CP2K preprocessing directives
"-----------------------------------------------------------------/

syn match cp2kPreProc "@include"
syn match cp2kPreProc "@set"
syn match cp2kPreProc "@if"
syn match cp2kPreProc "@endif"



syn match cp2kBegSection /^[\ ]*&[a-zA-Z0-9_]\+/ contains=cp2kSection nextgroup=test
syn match test ".*[^!#]" contains=cp2kConstant,cp2kNumber,cp2kBool,cp2kComment,cp2kSection



syn match cp2kBegKeyword /^[\ ]*[a-zA-Z0-9_]\+/ contains=cp2kKeyword,cp2kKeywordAlias
syn match cp2kBegSection /^[\ ]*&[a-zA-Z0-9_]\+/ contains=cp2kSection


"----------------------------------------------------------------------------/
"   Final setup
"----------------------------------------------------------------------------/

let b:current_syntax = "cp2k"
set fdm=syntax
set foldlevel=3
"----------------------------------------------------------------------------/
"   cp2k keyword highlighting rules
"----------------------------------------------------------------------------/

hi def link cp2kComment Comment
hi def link cp2kTodo Todo
hi def link cp2kBool Boolean
hi def link cp2kNumber Boolean
hi def link cp2kSection Special
hi def link cp2kBegSection Special
hi def link cp2kEndSection Special
hi def link cp2kKeyword Statement
hi def link cp2kKeywordAlias Comment
hi def link cp2kConstant Constant
hi def link cp2kPreProc PreProc

EOF


) > cp2k.vim

echo "generated cp2k.vim "
echo "copy this to ~/.vim/syntax/ and adjust ~/.vim/filetype.vim "
echo "the latter file should contain a line similar to "
echo "au BufRead,BufNewFile *.inp setfiletype cp2k"



