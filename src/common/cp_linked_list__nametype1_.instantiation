[
{
 'nametype1':'3d_r',
 'type1':'real(kind=dp),dimension(:,:,:),pointer',
 'type1in':'real(kind=dp),dimension(:,:,:), pointer',
 'type1out':'real(kind=dp),dimension(:,:,:), pointer',
 'common_dir':'.',
 'USE':
"""USE kinds, only: dp
USE cp_array_r_utils, only: cp_3d_r_p_type""",
 'defines':
"""! less not much meningful... and defines oly a partial ordering.
#define CP_SLL_R_LESS_Q(el1,el2,error) ( all(el1 < el2) )
#define CP_SLL_R_EQUAL_Q(el1,el2,error) ( all(el1 == el2) )
""",
 '=':'=>',
 'type1arrayEl':'type(cp_3d_r_p_type)',
 'array=':'=>',
 'arrayEl':'%array',
 'lessQ':'CP_SLL_R_LESS_Q',
 'equalQ':'CP_SLL_R_EQUAL_Q',
 'write_el':'',
 'private_routines':''
},
]
